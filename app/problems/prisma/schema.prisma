// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DifficultyLevel {
  EASY
  MEDIUM
  HARD
}

enum SubmissionsStatus {
  PENDING
  ACCEPTED
  WRONG_ANSWER
  EXECUTION_ERROR
  TIME_OUT
  FAILED
  INTERNAL_ERROR
  INVALID_FUNCTION_SIGNATURE
  LANGUAGE_NOT_SUPPORTED
}

enum ProblemsTypes {
  NORMAL_PROBLEM
  Arrays_and_Strings
  Linked_Lists
  Trees_and_Graphs
  Dynamic_Programming
  Sorting_and_Searching
}

model Problems {
  id            String         @id
  title         String
  description   String
  functionName  String
  language      String[]
  difficulty    DifficultyLevel
  testCases     Json[]
  problemsTypes ProblemsTypes
  tags          String[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  submissions   Submissions[]
  discussions   Discussion[]
}

model Submissions {
  id          Int      @id @default(autoincrement())
  userId      String
  problemsId  String
  problems    Problems  @relation(fields: [problemsId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  status      SubmissionsStatus
  language    String
  code        String
  output      String?
  runtimeMs   Int?
  memoryKb    Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime  @updatedAt
}

model Discussion {
  id         Int      @id @default(autoincrement())
  userId     String
  problemId  String
  problem    Problems  @relation(fields: [problemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  content    String
  createdAt  DateTime @default(now())
}
