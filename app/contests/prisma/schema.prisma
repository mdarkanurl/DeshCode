// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("CONTESTS_DATABASE_URL")
}

enum SubmissionsStatus {
  PENDING
  ACCEPTED
  WRONG_ANSWER
  EXECUTION_ERROR
  TIME_OUT
  FAILED
  INTERNAL_ERROR
  INVALID_FUNCTION_SIGNATURE
  LANGUAGE_NOT_SUPPORTED
}

enum ProblemsTypes {
  NORMAL_PROBLEM
  Arrays_and_Strings
  Linked_Lists
  Trees_and_Graphs
  Dynamic_Programming
  Sorting_and_Searching
}

model contests {
  id          String   @id @default(cuid())
  name        String
  description String?
  rules       String?
  problemsId   String[]
  startTime   DateTime
  endTime     DateTime

  participants participants[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model submissions {
  id         Int      @id @default(autoincrement())
  participantId     String?
  participants participants? @relation(fields: [participantId], references: [id])
  userId    String
  problemsId  String
  status     SubmissionsStatus
  language   String
  code   String
  score     Int?
  output String?
  runtimeMs  Int?
  memoryKb   Int?
  createdAt  DateTime @default(now())
  updatedAt    DateTime  @updatedAt
}

model participants {
  id        String  @id @default(cuid())
  contestId String
  userId    String  @unique

  contest   contests  @relation(fields: [contestId], references: [id])
  Submissions submissions[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}